% объявление динамических предикатов
:- dynamic накормлено/1, вымирает/1, падальщик/1, жировой_запас/1, животное/1, накормлено/1, хищник/1, водоплавающее/1, ядовитое/1.

% факты
фаза_рождения :- 
    assertz(животное(животное1)),
    assertz(животное(животное2)),
    assertz(животное(животное3)),
    assertz(животное(животное4)),
    assertz(животное(животное5)),
    assertz(животное(животное6)),
    assertz(животное(животное7)),
    assertz(животное(животное8)),
    assertz(хищник(животное1)),
    assertz(водоплавающее(животное1)),
    assertz(водоплавающее(животное3)),
    assertz(ядовитое(животное3)),
    assertz(падальщик(животное4)),
    assertz(жировой_запас(животное6)),
    assertz(жировой_запас(животное7)),
    assertz(жировой_запас(животное8)),
    assertz(сотрудничество(животное1, животное2)),
    assertz(сотрудничество(животное2, животное3)),
    assertz(скрытное(животное5, камуфляж)),
    assertz(скрытное(животное1, большое)),
    assertz(скрытное(животное2, норное)),
    assertz(скрытное(животное3, быстрое)),
    assertz(скрытное(животное4, отбрасываетХвост)),
    assertz(требует_дополнительного_корма(животное3, паразит)),
    assertz(требует_дополнительного_корма(животное4, большое)).

% правила
ест(Хищник, Жертва) :-
    хищник(Хищник),
    животное(Жертва),
    в_одной_среде(Хищник, Жертва),
    Хищник \= Жертва,
    assertz(накормлено(Хищник)),
    assertz(вымирает(Жертва)),
    (вымирает_если_ядовитое(Хищник, Жертва) ; true),
    (накормлено_если_падальщик ; true).

в_одной_среде(А, Б) :- 
    водоплавающее(А), 
    водоплавающее(Б).

в_одной_среде(А, Б) :- 
    \+ водоплавающее(А), 
    \+ водоплавающее(Б).

вымирает_если_ядовитое(Хищник, Жертва) :- 
    ядовитое(Жертва), 
    assertz(вымирает(Хищник)).

накормлено_если_падальщик :- 
    падальщик(Животное), 
    assertz(накормлено(Животное)), 
    fail.

% игровой процесс 

фаза_старта :- 
    retractall(животное(_)),
    retractall(накормлено(_)),
    retractall(вымирает(_)),
    retractall(жировой_запас(_)),
    retractall(хищник(_)),
    retractall(водоплавающее(_)),
    retractall(ядовитое(_)).

фаза_вымирания :-
    животное(Животное),
    \+ жировой_запас(Животное),
    \+ накормлено(Животное), 
    assertz(вымирает(Животное)),
    fail.
фаза_вымирания.

фаза_очистки :- 
    вымирает(Животное),
    retractall(животное(Животное)),
    fail.
фаза_очистки.

% ввод/вывод

вывести_всех_животных :-
    животное(Животное),
    format('Животное: ~w~n', [Животное]),
    (накормлено(Животное) -> format('  Накормлено: да~n') ; true),
    (вымирает(Животное) -> format('  Вымирает: да~n') ; true),
    (жировой_запас(Животное) -> format('  Жировой запас: есть~n') ; true),
    (хищник(Животное) -> format('  Хищник: да~n') ; true),
    (водоплавающее(Животное) -> format('  Водоплавающее: да~n') ; true),
    (ядовитое(Животное) -> format('  Ядовитое: да~n') ; true),
    fail.
вывести_всех_животных.